#####################################################
#                                                   #     
#                        Bash                       #     
#                                                   #     
#####################################################

[[language]]
name = "bash"
scope = "source.bash"
injection-regex = "(shell|bash|zsh|sh)"
file-types = [
  "sh",
  "bash",
  "zsh",
  ".bash_login",
  ".bash_logout",
  ".bash_profile",
  ".bashrc",
  ".profile",
  ".zshenv",
  "zshenv",
  ".zlogin",
  "zlogin",
  ".zlogout",
  "zlogout",
  ".zprofile",
  "zprofile",
  ".zshrc",
  "zshrc",
  ".zimrc",
  "APKBUILD",
  "PKGBUILD",
  "eclass",
  "ebuild",
  "bazelrc",
  ".bash_aliases",
  "Renviron",
  ".Renviron",
  ".xprofile",
  ".xsession",
  ".xsessionrc",
  "zsh-theme",
  "ksh",
  "cshrc",
  "tcshrc",
  ".yashrc",
  ".yash_profile",
  ".hushlogin",
  "bashrc_Apple_Terminal",
  "zshrc_Apple_Terminal",
  ".envrc"
]
shebangs = ["sh", "bash", "dash", "zsh"]
roots = []
comment-token = "#"
language-servers = [ "bash-language-server" ]
indent = { tab-width = 4, unit = "    " }

[[grammar]]
name = "bash"
source = { git = "https://github.com/tree-sitter/tree-sitter-bash", rev = "275effdfc0edce774acf7d481f9ea195c6c403cd" }

#####################################################
#                                                   #     
#                        C                          #     
#                                                   #     
#####################################################


[[language]]
name = "c"
scope = "source.c"
injection-regex = "c"
file-types = ["c"] # TODO: ["h"]
roots = []
comment-token = "//"
indent = { tab-width = 4, unit = "    " }
formatter = { command = "clang-format", args = ["--style=file"] }
auto-format = true

[language.debugger]
name = "lldb-dap"
transport = "stdio"
command = "lldb-dap"

[[language.debugger.templates]]
name = "binary"
request = "launch"
completion = [ { name = "binary", completion = "filename" } ]
args = { console = "internalConsole", program = "{0}" }

[[language.debugger.templates]]
name = "attach"
request = "attach"
completion = [ "pid" ]
args = { console = "internalConsole", pid = "{0}" }

[[grammar]]
name = "c"
source = { git = "https://github.com/tree-sitter/tree-sitter-c", rev = "7175a6dd5fc1cee660dce6fe23f6043d75af424a" }


#####################################################
#                                                   #     
#                        C++                        #     
#                                                   #     
#####################################################

[language-server.clangd]
command = "clangd"
args = [ "--header-insertion=never", "--clang-tidy" ]

[[language]]
name = "cpp"
scope = "source.cpp"
injection-regex = "cpp"
file-types = ["cc", "hh", "c++", "cpp", "hpp", "h", "ipp", "tpp", "cxx", "hxx", "ixx", "txx", "ino", "C", "H", "cu", "cuh", "cppm", "h++", "ii", "inl", ".hpp.in", ".h.in", ".hxx.in"]
roots = []
comment-token = "//"
indent = { tab-width = 4, unit = "    " }
formatter = { command = "clang-format", args = ["--style=file"] }
auto-format = true

[language.auto-pairs]
"<" = ">"

[language.debugger]
name = "lldb-vscode"
transport = "stdio"
command = "lldb-vscode"

[[language.debugger.templates]]
name = "binary"
request = "launch"
completion = [ { name = "binary", completion = "filename" } ]
args = { console = "internalConsole", program = "{0}" }

[[language.debugger.templates]]
name = "attach"
request = "attach"
completion = [ "pid" ]
args = { console = "internalConsole", pid = "{0}" }

[[language.debugger.templates]]
name = "gdbserver attach"
request = "attach"
completion = [ { name = "lldb connect url", default = "connect://localhost:3333" }, { name = "file", completion = "filename" }, "pid" ]
args = { console = "internalConsole", attachCommands = [ "platform select remote-gdb-server", "platform connect {0}", "file {1}", "attach {2}" ] }

[[grammar]]
name = "cpp"
source = { git = "https://github.com/tree-sitter/tree-sitter-cpp", rev = "670404d7c689be1c868a46f919ba2a3912f2b7ef" }


#####################################################
#                                                   #     
#                        CMake                      #     
#                                                   #     
#####################################################

[language-server.cmake-language-server]
command = "cmake-language-server"

[[language]]
name = "cmake"
scope = "source.cmake"
file-types = ["cmake", { glob = "CMakeLists.txt" }]
comment-token = "#"
block-comment-tokens = { start = "#[[", end = "]]" }
indent = { tab-width = 2, unit = "  " }
language-servers = [ "cmake-language-server" ]
injection-regex = "cmake"
formatter = { command = "cmake-format", args = ["-"] }
auto-format = true

[[grammar]]
name = "cmake"
source = { git = "https://github.com/uyha/tree-sitter-cmake", rev = "6e51463ef3052dd3b328322c22172eda093727ad" }


#####################################################
#                                                   #     
#                        make                       #     
#                                                   #     
#####################################################


[[language]]
name = "make"
scope = "source.make"
file-types = [{ glob = "Makefile" }, { glob = "makefile" }, "make", "mk", "mak", {glob = "GNUmakefile" }, { glob = "OCamlMakefile" }]
shebangs = ["make", "gmake"]
injection-regex = "(make|makefile|Makefile|mk)"
comment-token = "#"
indent = { tab-width = 4, unit = "\t" }

[[grammar]]
name = "make"
source = { git = "https://github.com/alemuller/tree-sitter-make", rev = "a4b9187417d6be349ee5fd4b6e77b4172c6827dd" }

#####################################################
#                                                   #     
#                        clojure                    #     
#                                                   #     
#####################################################

clojure-lsp = { command = "clojure-lsp" }

[[language]]
name = "clojure"
scope = "source.clojure"
injection-regex = "(clojure|clj|edn|boot)"
file-types = ["clj", "cljs", "cljc", "clje", "cljr", "cljx", "edn", "boot"]
roots = ["project.clj", "build.boot", "deps.edn", "shadow-cljs.edn"]
comment-token = ";"
language-servers = [ "clojure-lsp" ]
indent = { tab-width = 2, unit = "  " }

[[grammar]]
name = "clojure"
source = { git = "https://github.com/sogaiu/tree-sitter-clojure", rev = "e57c569ae332ca365da623712ae1f50f84daeae2" }

#####################################################
#                                                   #     
#                        python                     #     
#                                                   #     
#####################################################

[language-server.pylsp]
command = "pylsp"

[[language]]
name = "python"
scope = "source.python"
injection-regex = "py(thon)?"
file-types = ["py", "pyi", "py3", "pyw", "ptl", "rpy", "cpy", "ipy", "pyt", { glob = ".python_history" }, { glob = ".pythonstartup" }, { glob = ".pythonrc" }, { glob = "SConstruct" }, { glob = "SConscript" }]
shebangs = ["python"]
roots = ["pyproject.toml", "setup.py", "poetry.lock", "pyrightconfig.json"]
comment-token = "#"
language-servers = [ "pylsp" ]
# TODO: pyls needs utf-8 offsets
indent = { tab-width = 4, unit = "    " }

[[grammar]]
name = "python"
source = { git = "https://github.com/tree-sitter/tree-sitter-python", rev = "4bfdd9033a2225cc95032ce77066b7aeca9e2efc" }

#####################################################
#                                                   #
#                        rust                       #
#                                                   #
#####################################################

[language-server.rust-analyzer]
command = "rustup"
args = ["run", "stable", "rust-analyzer"]

[language-server.rust-analyzer.config.check]
command = "clippy"
